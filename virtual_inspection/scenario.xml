<html>
<body>
<div id='index'></div>
<div id='main'><h2>Summary</h2>
<p>This scenario is about manual virtual inspections of
<level name="site">the construction site</level> usually from the
<level name="office">site office</level></p>
<h2>Models</h2>
<p><em>Intentionally left empty.</em></p>
<h2>Definitions</h2>
<p><em>Intentionally left empty.</em></p>
<h2>Scenario</h2>
<p>The inspection is based on:</p>
<ul>
<li>the geometry of the <modelref name="evolving_plan#bim3d" /></li>
<li>the observations (such as <modelref name="digital_reconstruction#images" /> or
<modelref name="digital_reconstruction#as-built" />),</li>
<li>the relations to abstract entities (such as tasks, costs <em>etc.</em>) from
<modelref name="evolving_plan#bim_extended" />, and</li>
<li>the <ref name="topic_management#topic" />s.</li>
</ul>
<p>The data is visualized as a 3D model.</p>
<h3>As-planned</h3>
<p><strong>Visualization</strong>.
The system displays a selected <ref name="evolving_plan#revision" /> of
<modelref name="evolving_plan#bim3d" />.</p>
<p>Two <ref name="evolving_plan#revision" />s can be compared visually, <em>e.g.</em>, by using color
tainting. (Mind that the difference between the two models is not computed explicitly, only
demonstrated visually.)</p>
<p><strong>Filtering of the displayed elements</strong>.
The elements can be filtered by a set of one or more <ref name="evolving_plan#guid" />s or
unique resource identifiers (URIs).</p>
<p>The elements can be further filtered by the type and and property values.</p>
<p>To spatially and logically filter elements, a bounding box, a set of related zones and/or a set
of related groups can be selected.</p>
<p>Furthermore, we can also filter the elements by the related <ref name="scheduling#task_shadow" />s.</p>
<p>The <ref name="scheduling#task_shadow" />s can be filtered by time range, task type and/or
a set of related <ref name="actor_management#actor" />s (manually picked).
The filtering of tasks dictates the filtering of displayed elements. </p>
<p>The element can be further filtered by a set of related <ref name="topic_management#topic" />s.
The <ref name="topic_management#topic" />s can be filtered by a priority, filter, status and time
range.</p>
<p>All these filters can be combined to compositional filters as intersections and/or unions
of filters.</p>
<p>Note that the filtering is also relevant for other components of the system so that they can link
to virtual inspection.
This implies that the query underlying the filtering should be representable as a string and can be
easily embedded in an an URL.</p>
<p>The hidden elements can either be completely hidden or displayed as markedly transparent.</p>
<p>(Note about the implementation priorities:
it remains to be seen during the implementation what queries are ergonomic and what can be
practically implemented.
We need to start with a simple solution and progress to the more sophisticated ones.</p>
<p>Please also consider the remark regarding the importance of filtering when inspecting the
divergence between the plans and as-built observations.)</p>
<p><strong>Risk zone visualization</strong>.
The <ref name="risk_management#risk_zone" />s are a special kind of zones and need proper
visualization.</p>
<p>For example, they can be coloured appropriately by their <ref name="risk_management#risk_level" />.</p>
<p>We also need to take into account the temporal validity of a risk zone (<em>e.g.</em>, see
<ref name="risk_management#risk" />).</p>
<p>The user can turn these zone visualizations on/off.</p>
<p>This visualization is particularly useful for the briefing sessions.</p>
<p><strong>Topic visualization</strong>.
We visualize all the related <ref name="topic_management#topic" />s
of the elements currently in the view (<em>e.g.</em>, as icons).
You can follow the link straight to <scenarioref name="topic_management" /> to read about that
<ref name="topic_management#topic" />.</p>
<p>You can also filter the visualized <ref name="topic_management#topic" />s by setting
a priority filter, status (open, candidate, resolved, +user defined <em>etc.</em>) and time range.
Mind that this is different from filtering the <em>elements by filtering their related topics</em>. </p>
<p>Visualizing the content of a <ref name="topic_management#topic" /> is out-of-scope of the project.
We deem such a visualization to be confusing.
We expect the user to use <scenarioref name="topic_management" /> for general topic management. </p>
<p><strong><ref name="topic_management#viewquery" /> creation</strong>.
To create a <ref name="topic_management#viewquery" />, the user needs to filter in the
relevant data (as-planned, as-observed and divergence).</p>
<p>The user is provided a special GUI element to convert the query into
an <ref name="topic_management#viewquery" />, preview it and attach it as
a <ref name="topic_management#comment" /> to a <ref name="topic_management#topic" />.</p>
<p><strong>Information about an element.</strong>
An individual BIM element can be selected (<em>e.g.</em>, by clicking on it).</p>
<p>The information about the element is displayed based on the extended information from
<modelref name="evolving_plan#bim_extended" />.
This include relations of an element to actors, tasks, costs <em>etc.</em></p>
<p>Once the relations are displayed, we can follow the reference of, say, a related<code>IfcTask</code> and
jump to <scenarioref name="scheduling" />.</p>
<p>Additionally, we list all the <ref name="topic_management#topic" />s (and, consequently, to
<ref name="topic_management#comment" />s) involved with the element.
The user can jump to the <scenarioref name="topic_management" /> to see the details.</p>
<p><strong>Access</strong>.
We do not distinguish the relations in different access categories.
The user is either allowed to see all the relations <em>OR</em>
she is not allowed to see any (in which case, she sees only the geometry and the point clouds).</p>
<h3>As-observed</h3>
<p><strong>Observed uninterpretable geometry</strong>.
The user can select what observations should be displayed:</p>
<ul>
<li>points from <modelref name="digital_reconstruction#point_cloud" />,</li>
<li>voxels from <modelref name="digital_reconstruction#voxel_cloud" /> or</li>
<li>reconstructed geometry from
<modelref name="digital_reconstruction#reconstructed_geometry" />.</li>
</ul>
<p>These observations can be filtered by:</p>
<ul>
<li>time range,</li>
<li>the source (<em>e.g.</em>, <ref name="uxv_recording#UXV" />s and
the related <ref name="uxv_recording#sensor" />s,
manual snapshot filtered by the relevant <ref name="actor_management#actor" />s <em>etc.</em>),</li>
<li>bounding box, and</li>
<li>selected BIM element(s)
(<em>e.g.</em>, by selecting the bounding box over the elements and enlarging it a bit).</li>
</ul>
<p>The system should be able to display multiple overlapping observations.</p>
<p>They can be differentiated by color tainting related to a selection of multiple time ranges.
For example, the points corresponding to the time range 12:00-16:00 2021-01-13 are tainted red,
and the points corresponding to the time range 00:00-23:59 2021-01-05 are tainted blue.</p>
<p><strong>Visualization considerations</strong>.
The system should be careful how the points are transferred to the user.</p>
<p>A scan of a room with lasers can easily become a gigabyte, and sometimes there are even multiple
scans of the same room.</p>
<p>Instead of just pushing all the data to the client, the server needs to compress the
<modelref name="digital_reconstruction#point_cloud" /> somehow.</p>
<p>One approach would be to only display
<modelref name="digital_reconstruction#reconstructed_geometry" />.
In parallel, the system can also compress the points by melting together the points which are
too far away (by gracefully reducing the resolution, brute-force sub-sampling, voxelization <em>etc.</em>). </p>
<p>Hence the backend needs to continuously talk to the client and update the set of visible points
as well as &quot;melt together&quot; the points too far away and &quot;unmelt&quot; the points closer up.</p>
<p><strong>Images</strong>.
Images are displayed as icons anchored at their position.</p>
<p>The user can view individual images (<em>e.g.</em>, by clicking on their icon).</p>
<p>The user can filter the images similar to the point cloud:</p>
<ul>
<li>by selecting individual images,</li>
<li>by selecting one or more BIM elements (so that all images capturing the elements will be
selected whereas the visibility is defined through
<modelref name="digital_reconstruction#as-built" />),</li>
<li>time range,</li>
<li>type of image (RGB, thermal <em>etc.</em>),</li>
<li>... and many more criteria (to be discussed during the implementation). </li>
</ul>
<p>The <ref name="thermal_inspection#thermal_image" />s are a special case where we want to include
semantic information about the temperature.
Instead of displaying a general icon, we want to summarize the temperature.
For example, we could show minimum, 10%-quantile, 90%-quantile and maximum as a rectangle.
(How we display this information is to be decided during the implementation.)  </p>
<p><strong>As-built</strong>.
Additionally, the user can display the geometry corresponding to a version of<br />
<modelref name="digital_reconstruction#as-built" />.
The user can also visually compare two different as-built versions (<em>e.g.</em>, by color tainting).</p>
<p>The filtering functionality is same as filtering the as-planned elements.  </p>
<h3>Divergence</h3>
<p>The as-planned and as-observed views can be merged in a single one by stacking.</p>
<p>If both <modelref name="evolving_plan#bim3d" /> and
<modelref name="digital_reconstruction#as-built" /> are to be displayed,
we visually compare them, <em>e.g.</em>, by color tainting to highlight the one or the other.</p>
<p>Since the elements in <modelref name="digital_reconstruction#as-built" /> share
the identifiers with <modelref name="evolving_plan#bim3d" />, we can also apply the same filtering
mechanism as for as-planned elements.</p>
<p>The rich filtering capabilities are particularly relevant for the visualization of the as-built
<em>versus</em> as-planned differences. While their benefit is rather marginal during inspection
of as-planned elements, it becomes much more difficult to spot important deviations without
proper focus on different kinds of elements as not all deviations are equal.</p>
<p>For example, the deviation of 1cm might be acceptable for one wall, but unacceptable for another or
for the width of a window frame. Where elements need to be inspected manually, showing only the
relevant subset (both the planned elements as well as their observations) is crucial. </p>
<p>We also need to provide a functionality to manually measure distances.
For example, this can be related to <scenarioref name="risk_management" /> where we need to check
that emergency exits are close enough.
Another example is to verify manually if a building element has been properly constructed. </p>
<p><strong>Example</strong>.
We examine the following story.</p>
<p>&quot;The quality survey shows, that the window on the 1st floor at this position is 5 cm larger.
We will need to order larger windows if the whole remains the same size.&quot;</p>
<p>Here are the steps how this story can be effectuated using virtual inspection:</p>
<ol>
<li>
<p>Select the latest <ref name="evolving_plan#revision" /> of
<modelref name="evolving_plan#bim3d" />. </p>
<p>Filter the elements by the desired date (to hide all the irrelevant elements from
<modelref name="evolving_plan#bim3d" />).</p>
</li>
<li>
<p>Select the time range to include the relevant recording(s).</p>
</li>
<li>
<p>Navigate to the element in question.</p>
</li>
<li>
<p>Examine the element comparing the as-planned geometry from
<modelref name="evolving_plan#bim3d" /> with the point cloud, voxel cloud,
reconstructed geometry and/or images (filtered by the appropriate time range) and
as-built geometry (selected by the appropriate version).</p>
</li>
<li>
<p>Select the element to see its relations.</p>
</li>
<li>
<p>Go through its relations to tasks and search for the task corresponding to the installation.</p>
</li>
<li>
<p>Follow the reference to see the details of the task and finally retrieve
the relationship to the installer.</p>
</li>
<li>
<p>Create a new <ref name="topic_management#topic" /> describing the order and tracking
further steps.</p>
</li>
</ol>
<p>(As it might be obvious from this example, we still need to figure out how filtering can be
made ergonomic.
For example, it might make sense to pick a single time range and have it applied both to filtering
elements in <modelref name="evolving_plan#bim3d" /> by filtering tasks, to select the appropriate
version of <modelref name="digital_reconstruction#as-built" /> and to filter the images, point cloud
and other observations.</p>
<p>We need to experiment with the filtering during the implementation. We know for now that the
backend should provide a versatile query mechanism.)</p>
<h3>Analytics</h3>
<p><em>Intentionally left empty.</em></p>
<h3>Scheduling</h3>
<p><em>Intentionally left empty.</em></p>
<h3>Safety</h3>
<p><em>Intentionally left empty.</em></p>
<h2>Test Cases</h2>
<test name="behavioral_test">
<p>We pick two testers, Tester 1 and tester 2.</p>
<p><strong>Stage 1.</strong>
Present observations (<modelref name="digital_reconstruction#images" />,
<modelref name="digital_reconstruction#point_cloud" />, <em>etc.</em>) to
Tester 1.</p>
<p>(Change the plan behind the back of the tester in order to introduce a deviation for sure.)</p>
<p>Present the plan (<modelref name="evolving_plan#bim3d" />, deliberately modified).</p>
<p>The tester should find a deviation.</p>
<p>The tester should create a <ref name="topic_management#topic" /> (this would be a new topic as
we deliberately modified <modelref name="evolving_plan#bim3d" />).</p>
<p><strong>Stage 2.</strong>
Pick another tester, Tester 2.</p>
<p>We modify the plan (<modelref name="evolving_plan#bim3d" />) back to the original state.</p>
<p>We ask Tester 2 to act on it and see if s/he resolves the <ref name="topic_management#topic" />. </p>
</test>
<test name="magnitude">
<p>We need to generate mock data to test for <acceptanceref name="plan_magnitude" /> and
<acceptanceref name="observation_magnitude" /> (both on backend and on frontend!).</p>
</test>
<test name="fuzzy_queries">
<p>We automatically generate queries and make sure that the system does not break.</p>
<p>(We have to figure out the details during the implementation.)</p>
</test>
<h2>Acceptance Criteria</h2>
<acceptance name="plan_magnitude">
<p>There are thousands of elements to be displayed.</p>
<p>For each element, there might be hundreds of related <ref name="scheduling#task" />s,
related <ref name="actor_management#actor" />s and related <ref name="topic_management#topic" />s.</p>
</acceptance>
<acceptance name="observation_magnitude">
<p>A scan of a room can easily become 1 Gigabyte with many, many points.</p>
<p>We can show point clouds in megabytes (so only a fraction), say, for a selected element or a smaller
volume of interest.</p>
<p>However, there needs to be the way to view the point cloud in sufficient detail.
At the moment (2021-01-27), we do not know precisely how to do this and need to leave this
as an important implementation detail.</p>
</acceptance>
<acceptance name="observation_selection">
<p>The system should be able to display up to three (3)
<ref name="digital_reconstruction#recording" />s.</p>
<p>We don't have to present more <ref name="digital_reconstruction#recording" />s as that would be
confusing for the user, but also very difficult to handle on the backend due to the volume of the
data.</p>
<p>For example, if you have more than three recordings, you would have a very large number of
recorded <ref name="digital_reconstruction#point" />s for a single location (<em>e.g.</em>, imagine if
4-5 drones or robots record in parallel -- you can not present the points of <em>all</em> of them at a
fine-grained resolution.) </p>
</acceptance>
</div>
</body>
</html>